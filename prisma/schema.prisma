generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Ticket {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  description   String
  actions TicketActions[]
  userCreatorId Int
  UserCreator User @relation(fields: [userCreatorId], references: [id])
  companyId Int
  Company Company @relation(fields: [companyId], references: [id])
  public Boolean  @default(false)
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username String
  password String
  isActive Boolean
  companyId Int
  Tickets Ticket[]
  ownActions TicketActions[] @relation("actionCreator")
  actionsClient TicketActions[] @relation("actionClient")
  Company Company @relation(fields: [companyId], references: [id])
  @@unique([username])
}

model Company {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  doc String
  name String
  email String
  contact String
  isActive Boolean
  User User[]
  tickets Ticket[]
}

model TicketActions {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticketId Int
  Ticket Ticket @relation(fields: [ticketId], references: [id])
  description String
  clientUserId Int
  ClientUser User @relation("actionClient", fields: [clientUserId], references: [id]) 
  userCreatorId Int
  UserCreator User @relation("actionCreator", fields: [userCreatorId], references: [id])
  isActive Boolean
}